openapi: 3.0.3
info:
  title: TX-BE Interactive Clarification API
  description: Interactive clarification phase endpoints for gathering additional project requirements
  version: 1.0.0
  contact:
    name: TX-BE API Support
    email: support@tx-be.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.tx-be.com
    description: Production server
  - url: https://staging-api.tx-be.com
    description: Staging server
  - url: http://localhost:3000
    description: Local development server

tags:
  - name: Clarification
    description: Interactive clarification operations for gathering additional requirements

paths:
  /api/v1/projects/{projectId}/clarification/questions:
    get:
      tags:
        - Clarification
      summary: Get clarification questions
      description: Get clarification questions generated by AI based on research findings
      operationId: getClarificationQuestions
      parameters:
        - name: projectId
          in: path
          required: true
          description: Project ID
          schema:
            type: string
            pattern: '^proj_[a-zA-Z0-9\-]+$'
      responses:
        '200':
          description: Clarification questions retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClarificationQuestionsResponse'
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '412':
          description: Research phase not completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/projects/{projectId}/clarification/answer:
    post:
      tags:
        - Clarification
      summary: Submit answer to clarification question
      description: Submit an answer to a clarification question
      operationId: answerClarificationQuestion
      parameters:
        - name: projectId
          in: path
          required: true
          description: Project ID
          schema:
            type: string
            pattern: '^proj_[a-zA-Z0-9\-]+$'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerQuestionRequest'
            example:
              questionId: "q1"
              answer: "50-200 employees (medium businesses)"
              additionalNotes: "Focusing on companies that have outgrown basic tools but aren't ready for enterprise solutions."
      responses:
        '200':
          description: Answer submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnswerQuestionResponse'
        '400':
          description: Invalid answer or question
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Project or question not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/projects/{projectId}/clarification/skip:
    post:
      tags:
        - Clarification
      summary: Skip clarification question
      description: Skip a clarification question
      operationId: skipClarificationQuestion
      parameters:
        - name: projectId
          in: path
          required: true
          description: Project ID
          schema:
            type: string
            pattern: '^proj_[a-zA-Z0-9\-]+$'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkipQuestionRequest'
            example:
              questionId: "q2"
              reason: "Will decide on integrations later in development process"
      responses:
        '200':
          description: Question skipped successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkipQuestionResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Project or question not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/projects/{projectId}/clarification/status:
    get:
      tags:
        - Clarification
      summary: Get clarification status
      description: Get current status of the clarification process
      operationId: getClarificationStatus
      parameters:
        - name: projectId
          in: path
          required: true
          description: Project ID
          schema:
            type: string
            pattern: '^proj_[a-zA-Z0-9\-]+$'
      responses:
        '200':
          description: Clarification status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClarificationStatusResponse'
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/projects/{projectId}/clarification/complete:
    post:
      tags:
        - Clarification
      summary: Complete clarification phase
      description: Complete the clarification phase and proceed to PRD generation
      operationId: completeClarification
      parameters:
        - name: projectId
          in: path
          required: true
          description: Project ID
          schema:
            type: string
            pattern: '^proj_[a-zA-Z0-9\-]+$'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteClarificationRequest'
            example:
              sessionId: "clarify_xyz789abc123"
              additionalNotes: "Ready to proceed with PRD generation based on current answers."
      responses:
        '200':
          description: Clarification phase completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteClarificationResponse'
        '400':
          description: Invalid request or insufficient answers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    ClarificationQuestionsResponse:
      type: object
      required:
        - success
        - data
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          required:
            - sessionId
            - totalQuestions
            - currentQuestion
            - questions
            - progress
          properties:
            sessionId:
              type: string
              example: "clarify_xyz789abc123"
            totalQuestions:
              type: integer
              example: 8
            currentQuestion:
              type: integer
              example: 1
            questions:
              type: array
              items:
                $ref: '#/components/schemas/ClarificationQuestion'
            progress:
              $ref: '#/components/schemas/ClarificationProgress'

    ClarificationQuestion:
      type: object
      required:
        - questionId
        - category
        - question
        - type
        - required
        - reasoning
      properties:
        questionId:
          type: string
          example: "q1"
        category:
          type: string
          enum: [target_users, technical_requirements, business_model, feature_preferences, timeline_budget]
          example: "target_users"
        question:
          type: string
          example: "What is the primary size range of businesses you want to target?"
        type:
          type: string
          enum: [multiple_choice, single_choice, multiple_select, text_input, scale]
          example: "multiple_choice"
        options:
          type: array
          items:
            type: string
          example: ["1-10 employees (micro businesses)", "10-50 employees (small businesses)", "50-200 employees (medium businesses)", "200-1000 employees (large businesses)"]
        maxSelections:
          type: integer
          minimum: 1
          description: Maximum number of selections for multiple_select type
        required:
          type: boolean
          example: true
        reasoning:
          type: string
          example: "Understanding target business size helps determine pricing strategy and feature complexity."

    ClarificationProgress:
      type: object
      required:
        - answered
        - remaining
        - percentage
      properties:
        answered:
          type: integer
          minimum: 0
          example: 0
        remaining:
          type: integer
          minimum: 0
          example: 8
        skipped:
          type: integer
          minimum: 0
          example: 0
        percentage:
          type: number
          minimum: 0
          maximum: 100
          example: 0

    AnswerQuestionRequest:
      type: object
      required:
        - questionId
        - answer
      properties:
        questionId:
          type: string
          example: "q1"
        answer:
          anyOf:
            - type: string
            - type: array
              items:
                type: string
          example: "50-200 employees (medium businesses)"
        additionalNotes:
          type: string
          maxLength: 1000
          example: "Focusing on companies that have outgrown basic tools but aren't ready for enterprise solutions."

    AnswerQuestionResponse:
      type: object
      required:
        - success
        - data
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          required:
            - questionId
            - answer
            - answeredAt
            - progress
          properties:
            questionId:
              type: string
              example: "q1"
            answer:
              anyOf:
                - type: string
                - type: array
                  items:
                    type: string
              example: "50-200 employees (medium businesses)"
            additionalNotes:
              type: string
              example: "Focusing on companies that have outgrown basic tools but aren't ready for enterprise solutions."
            answeredAt:
              type: string
              format: date-time
              example: "2024-12-19T11:15:00.000Z"
            nextQuestion:
              $ref: '#/components/schemas/ClarificationQuestion'
            progress:
              $ref: '#/components/schemas/ClarificationProgress'

    SkipQuestionRequest:
      type: object
      required:
        - questionId
      properties:
        questionId:
          type: string
          example: "q2"
        reason:
          type: string
          maxLength: 500
          example: "Will decide on integrations later in development process"

    SkipQuestionResponse:
      type: object
      required:
        - success
        - data
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          required:
            - questionId
            - skipped
            - skippedAt
            - progress
          properties:
            questionId:
              type: string
              example: "q2"
            skipped:
              type: boolean
              example: true
            reason:
              type: string
              example: "Will decide on integrations later in development process"
            skippedAt:
              type: string
              format: date-time
              example: "2024-12-19T11:17:00.000Z"
            nextQuestion:
              $ref: '#/components/schemas/ClarificationQuestion'
            progress:
              $ref: '#/components/schemas/ClarificationProgress'

    ClarificationStatusResponse:
      type: object
      required:
        - success
        - data
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          required:
            - sessionId
            - status
            - totalQuestions
            - answered
            - skipped
            - remaining
            - progress
            - startedAt
            - lastActivity
            - categories
          properties:
            sessionId:
              type: string
              example: "clarify_xyz789abc123"
            status:
              type: string
              enum: [pending, in_progress, completed, paused]
              example: "in_progress"
            totalQuestions:
              type: integer
              example: 8
            answered:
              type: integer
              example: 3
            skipped:
              type: integer
              example: 1
            remaining:
              type: integer
              example: 4
            progress:
              type: number
              minimum: 0
              maximum: 100
              example: 50
            startedAt:
              type: string
              format: date-time
              example: "2024-12-19T11:10:00.000Z"
            lastActivity:
              type: string
              format: date-time
              example: "2024-12-19T11:20:00.000Z"
            categories:
              type: object
              additionalProperties:
                type: string
                enum: [pending, in_progress, completed, skipped]
              example:
                target_users: "completed"
                technical_requirements: "skipped"
                business_model: "completed"
                feature_preferences: "in_progress"
                timeline_budget: "pending"

    CompleteClarificationRequest:
      type: object
      required:
        - sessionId
      properties:
        sessionId:
          type: string
          example: "clarify_xyz789abc123"
        additionalNotes:
          type: string
          maxLength: 1000
          example: "Ready to proceed with PRD generation based on current answers."

    CompleteClarificationResponse:
      type: object
      required:
        - success
        - data
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          required:
            - sessionId
            - completedAt
            - summary
            - nextStep
            - message
          properties:
            sessionId:
              type: string
              example: "clarify_xyz789abc123"
            completedAt:
              type: string
              format: date-time
              example: "2024-12-19T11:25:00.000Z"
            summary:
              type: object
              required:
                - totalQuestions
                - answered
                - skipped
                - completionRate
              properties:
                totalQuestions:
                  type: integer
                  example: 8
                answered:
                  type: integer
                  example: 6
                skipped:
                  type: integer
                  example: 2
                completionRate:
                  type: number
                  minimum: 0
                  maximum: 100
                  example: 75
            nextStep:
              type: string
              example: "prd_generation"
            message:
              type: string
              example: "Clarification phase completed successfully. PRD generation will begin shortly."

    ErrorResponse:
      type: object
      required:
        - success
        - error
        - metadata
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: string
              example: "RESOURCE_NOT_FOUND"
            message:
              type: string
              example: "Project with ID 'proj_invalid-id' not found"
            details:
              type: object
        metadata:
          type: object
          required:
            - timestamp
            - requestId
          properties:
            timestamp:
              type: string
              format: date-time
              example: "2024-12-19T10:30:00Z"
            requestId:
              type: string
              example: "req_12345678-90ab-cdef-1234-567890abcdef"
            path:
              type: string
              example: "/api/v1/projects/proj_123/clarification/questions"
